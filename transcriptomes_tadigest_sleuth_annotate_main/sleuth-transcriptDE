knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(biomaRt)
library(sleuth)
library(dplyr)
library(foreach)
library(doParallel)
library(data.table)
library(splines)
library(ggthemes)
library(scales)
library(gridExtra)
library(tximport)

sessionInfo()

setwd("~/RFolder/analyses/tadigest")

# Jack up the memory alloted to R...this requires quite a bit
#memory.limit(32000000)

# get the directory/path for each sample in this study
base_dir <- getwd()

# name of each sample
sample_id <- dir(file.path(base_dir, "kallisto_quants_Ri"))

sample_id

# append them to get the location of each samples' quantification
kal_dirs <- sapply(sample_id, function(id) file.path(base_dir, "kallisto_quants_Ri", id))

kal_dirs

# read in a tab-delimited file with information about samples and treatments
samples <- read.csv("imitator_samples_fi_nf.csv", header = TRUE)

samples

# order them to match up with sample paths - avoid R reordering samples (alphabetical)
samples <- samples[order(samples$sample),]

# combine into a single combined factor
group <- factor(paste(samples$treatment,sep="_"))

group

# bind this to the sample information dataframe
samples <- cbind(samples,group=group)

samples

# append paths to the sample dataframe
samples <- dplyr::mutate(samples, path = kal_dirs)

#print to make sure it looks good
samples

so <- sleuth_prep(samples, extra_bootstrap_summary=T)

# load the full model, which includes treatmeant
so <- sleuth_fit(so, formula = ~ treatment, fit_name = "full") # changed from spline_design
# load the reduced model, this is only the lane samples were sequenced on
so <- sleuth_fit(so, formula = ~ 1, fit_name = "reduced")

# print the models
models(so)

# load the full model, which includes a spline of time + the lane samples were sequenced on
so <- sleuth_fit(so, formula = ~ treatment, fit_name = "full") # changed from spline_design

# load the reduced model, this is only the lane samples were sequenced on
so <- sleuth_fit(so, formula = ~ 1, fit_name = "reduced")

# print the models
models(so)

# run a likelihood ratio test between the full and reduced models. This basically tests whether the inclusion of the treatment explains the data better than the reduced model with just the lane. Transcripts better explained by the inclusion of treatment should be considered differentially expressed over time. Qvalues are corrected for multiple comparisons.
so_lrt <- sleuth_lrt(so, "reduced", "full")

# save the model results to a data frame
lrt_results <- sleuth_results(so_lrt, 'reduced:full', test_type = 'lrt')

# how many transcripts are differentially expressed if we use a cut off of a = 0.05?
table(lrt_results[,"qval"] < 0.05)

# order results by q value, then filter out only the significant ones
sig_results <-  lrt_results[order(lrt_results$qval),]
siggies <- sig_results[ which(sig_results$qval < 0.05),]

sig_results

siggies

